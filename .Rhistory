x = 1:10
y = x^2
x
y
plot (x, y)
install.packages("knitr")
library(MASS)
ls
ls()
library(MASS)
dir
dir()
ls()
x = 1:9
x
library(MASS)
X
x
Auto = read
Auto = read.table("Auto.data")
library(MASS)
Boston
names(Boston)
lm.fit lm(medv~lstat, data = Boston)
lm.fit = lm(medv~lstat, data = Boston)
ls()
plot(lstat, medv)
plot(lstat, medv, data=Boston)
plot(Boston$lstat, Boston$medv)
abline(lm.fit)
abline(lm.fit, color="red", lwd=10)
abline(lm.fit, color="red")
abline(lm.fit, colour="red")
?abline
abline(lm.fit, col="red")
abline(lm.fit)
plot(Boston$lstat, Boston$medv)
abline(lm.fit, col="red")
abline(lm.fit, col="red", lwd=10)
lm.fit
coef(lm.fit)
plot(Boston$lstat, Boston$medv)
names(Boston)
plot(Boston$lstat, Boston$medv, colour=age)
plot(Boston$lstat, Boston$medv, colour=Boston$age)
plot(Boston$lstat, Boston$medv)
head(Boston)
Boston$rad <- as.factor(Boston$rad)
plot(Boston$lstat, Boston$medv, colour=Boston$rad)
plot(Boston$lstat, Boston$medv, col=Boston$rad)
plot(Boston$lstat, Boston$medv, col=Boston$rad, pch=20)
library(ggplot2)
install.packages("ggplot2")
plot(Boston$lstat, Boston$medv, col=Boston$rad)
plot(Boston$lstat, Boston$medv, col=Boston$rad,pch=20)
plot(Boston$lstat, Boston$medv, col=Boston$rad,pch=25)
plot(Boston$lstat, Boston$medv, col=Boston$rad,pch=10)
plot(Boston$lstat, Boston$medv, col=Boston$rad,pch=20)
plot(Boston$lstat, Boston$medv, col=Boston$rad,pch=20, xlab="lstat", ylab="medv")
library(ggplot2)
library(MASS)
Boston$rad <- as.factor(Boston$rad)
plot(Boston$lstat, Boston$medv, col=Boston$rad,pch=20, xlab="lstat", ylab="medv")
lm.fit (mdev~lstat, data= Bostom)
lm.fit (mdev~lstat, data= Boston)
lm.fit (medv~lstat, data= Boston)
lm.fit (library(MASS)
Boston$rad <- as.factor(Boston$rad)
plot(Boston$lstat, Boston$medv, col=Boston$rad,pch=20, xlab="lstat", ylab="medv")medv~lstat, data= Boston)
lm.fit (Boston$medv~Boston$lstat, data= Boston)
str(Boston)
lm.fit = lm(Boston$medv~Boston$lstat, data= Boston)
abline(lm.fit)
abline(lm.fit, col="red", lwd=10)
plot(Boston$lstat, Boston$medv, col=Boston$rad,pch=20, xlab="lstat", ylab="medv")
lm.fit = lm(Boston$medv~ 1 /Boston$lstat, data= Boston)
abline(lm.fit, col="red", lwd=10)
lm.fit = lm(Boston$medv~ 1.0 /Boston$lstat, data= Boston)
plot(Boston$lstat, Boston$medv, col=Boston$rad,pch=20, xlab="lstat", ylab="medv")
abline(lm.fit, col="red", lwd=10)
plot(Boston$lstat, Boston$medv, col=Boston$rad,pch=20, xlab="lstat", ylab="medv")
lm.fit = lm(Boston$medv~ Boston$lstat + Boston$lstat^2, data= Boston)
abline(lm.fit, col="red", lwd=10)
lm.fit = lm(Boston$medv~ exp(Boston$lstat), data= Boston)
plot(Boston$lstat, Boston$medv, col=Boston$rad,pch=20, xlab="lstat", ylab="medv")
abline(lm.fit, col="red", lwd=10)
exit
q()
library(devtools)
install_github('ramnathv/slidify')
install_github('ramnathv/slidifyLibraries')
getwd()
library(shiny)
library(map)
install.packages("map")
install.packages("mapdata")
install.packages("mapdata")
library(map)
library(maps)
library(maproj)
install.packages("mapproj")
library(help=datasets)
CO2
?CO2
require(stats); require(graphics)
coplot(uptake ~ conc | Plant, data = CO2, show.given = FALSE, type = "b")
## fit the data for the first plant
fm1 <- nls(uptake ~ SSasymp(conc, Asym, lrc, c0),
data = CO2, subset = Plant == "Qn1")
summary(fm1)
## fit each plant separately
fmlist <- list()
for (pp in levels(CO2$Plant)) {
fmlist[[pp]] <- nls(uptake ~ SSasymp(conc, Asym, lrc, c0),
data = CO2, subset = Plant == pp)
}
## check the coefficients by plant
print(sapply(fmlist, coef), digits = 3)
library(help=datasets)
Orange
?Orange
require(stats); require(graphics)
coplot(circumference ~ age | Tree, data = Orange, show.given = FALSE)
fm1 <- nls(circumference ~ SSlogis(age, Asym, xmid, scal),
data = Orange, subset = Tree == 3)
plot(circumference ~ age, data = Orange, subset = Tree == 3,
xlab = "Tree age (days since 1968/12/31)",
ylab = "Tree circumference (mm)", las = 1,
main = "Orange tree data and fitted model (Tree 3 only)")
age <- seq(0, 1600, length.out = 101)
lines(age, predict(fm1, list(age = age)))
?sleep
sleep
islands
?islands
?women
plot(women, xlab = "Height (in)", ylab = "Weight (lb)",
main = "women data: American women aged 30-39")
warpbreaks
?warpbreaks
Formaldehyde
?Formaldehyde
UCBAdmissions
?UCBAdmissions
require(graphics)
## Data aggregated over departments
apply(UCBAdmissions, c(1, 2), sum)
mosaicplot(apply(UCBAdmissions, c(1, 2), sum),
main = "Student admissions at UC Berkeley")
## Data for individual departments
opar <- par(mfrow = c(2, 3), oma = c(0, 0, 2, 0))
for(i in 1:6)
mosaicplot(UCBAdmissions[,,i],
xlab = "Admit", ylab = "Sex",
main = paste("Department", LETTERS[i]))
mtext(expression(bold("Student admissions at UC Berkeley")),
outer = TRUE, cex = 1.5)
par(opar)
?eurodist
eurodist
head(eurodist)
?infert
setwd("~/DataProductProj-22 Jan /CHICKENWEIGHT/project-presentation/chickWeightAppl")
slidify("index.Rmd")
library("slidify", lib.loc="~/R/i686-pc-linux-gnu-library/3.1")
library("knitr", lib.loc="~/R/i686-pc-linux-gnu-library/3.1")
slidify("index.Rmd")
browseURL("index.html")
browseURL("index.html")
browseURL("index.html")
publish_github("", "dataProductProject")
